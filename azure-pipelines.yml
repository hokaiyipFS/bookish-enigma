# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest

steps:
- script: echo Hello, world!

- task: TerraformInstaller@0
  inputs:
    terraformVersion: 'latest'
  displayName: 'Run a one-line script'

- task: TerraformTaskV3@3
  inputs:
    runAzLogin: true
    provider: 'azurerm'
    command: 'init'
    commandOptions: '-migrate-state'
    backendServiceArm: 'fsdevops-TFSPN'
    backendAzureRmResourceGroupName: 'fsdevops-infra'
    backendAzureRmStorageAccountName: 'fsdevopststate'
    backendAzureRmContainerName: 'tstate'
    backendAzureRmKey: 'JzDEm0M9J/j3DyRYgBmWsws/ZxFoSJc0kiUnlBe/POFLuBGOIJE3ObiuyBMh9Y3OlEg5/4Qxcw8j+AStUquPnA=='

- task: TerraformTaskV3@3
  inputs:
    provider: 'azurerm'
    command: 'plan'
    runAzLogin: true
    environmentServiceNameAzureRM: 'fsdevops-TFSPN'


- task: TerraformTaskV3@3
  inputs:
    provider: 'azurerm'
    command: 'apply'
    environmentServiceNameAzureRM: 'fsdevops-TFSPN'
    runAzLogin: true
